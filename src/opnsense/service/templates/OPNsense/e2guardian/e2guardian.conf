{% if helpers.exists('OPNsense.e2guardian.general.enabled') and OPNsense.e2guardian.general.enabled == '1' %}
# e2guardian config file for version 5.3.4

### QUICK_START section
###
language = '{{ OPNsense.e2guardian.general.language }}'

{% if OPNsense.e2guardian.general.checkip|default('') != '' %}
{%   for ip in OPNsense.e2guardian.general.checkip.split(',') %}
checkip = {{ ip }}
{%   endfor %}
{% endif %}
{% if OPNsense.e2guardian.general.extracheckports|default('') != '' %}
{%   for port in OPNsense.e2guardian.general.extracheckports.split(',') %}
extracheckports = {{ port }}
{%   endfor %}
{% endif %}
{% if OPNsense.e2guardian.general.transparenthttpsport %}
transparenthttpsport = {{ OPNsense.e2guardian.general.transparenthttpsport }}
{% endif %}
{% if OPNsense.e2guardian.general.icapport %}
icapport = {{ OPNsense.e2guardian.general.icapport }}
{% endif %}
{% if OPNsense.e2guardian.general.proxyip %}
proxyip = {{ OPNsense.e2guardian.general.proxyip }}
{% endif %}
{% if OPNsense.e2guardian.general.proxyport %}
proxyport = {{ OPNsense.e2guardian.general.proxyport }}
{% endif %}
filtergroups = {{ OPNsense.e2guardian.group.groups.group|length }}
enablessl = {% if OPNsense.e2guardian.general.enablessl == 1 %}on{% else %}off{% endif %}
###
### END of QUICK_START section

### NAMES_PATHS section
###
daemonuser = 'clamav'
daemongroup = 'clamav'
languagedir = '/usr/local/share/e2guardian/languages'
preauthstoryboard = '/usr/local/etc/e2guardian/preauth.story'
###
### END of NAMES_PATHS section

### NETWORK section
###
{% if OPNsense.e2guardian.general.filterip|default('') != '' %}
{%   for ip in OPNsense.e2guardian.general.filterip.split(',') %}
filterip = {{ ip }}
{%   endfor %}
{% else %}
filterip =
{% endif %}
{% if OPNsense.e2guardian.general.filterports|default('') != '' %}
{%   for port in OPNsense.e2guardian.general.filterports.split(',') %}
filterports = {{ port }}
{%   endfor %}
{% endif %}
###
### END of NETWORK section

### MITM section
###
{% if helpers.exists('OPNsense.e2guardian.general.cacertificatepath') %}
cacertificatepath = '/usr/local/etc/e2guardian/ca.pem'
caprivatekeypath = '/usr/local/etc/e2guardian/ca.key'
certprivatekeypath = '/usr/local/etc/e2guardian/cert.key'
generatedcertpath = '/usr/local/etc/e2guardian/generatedcerts/'
{% endif %}
###
### END of MITM section

### ICAP_SERVICE section
###
#defaulticapfiltergroup = 1;
###
### END of ICAP_SERVICE section

### TRANSPARENT section
###
#defaulttransparentfiltergroup = 1;
###
### END of TRANSPARENT section

### AUTH section
###
# Group based on ip or ip range - pseudo username of the ip
#authplugin = '/etc/e2guardian/authplugins/ip.conf'
# Group based on e2g port number - pseudo username of the port
# for this option the ports have to be declared as multiple filterport line
#authplugin = '/usr/local/etc/e2guardian/authplugins/port.conf'
#
# Filter groups options
# filtergroups sets the number of filter groups. A filter group is a set of content
# filtering options you can apply to a group of users.  The value must be 1 or more.
# e2guardian will automatically look for e2guardianfN.conf where N is the filter
# group.  To assign users to groups use the filtergroupslist option.  All users default
# to filter group 1.  You must have some sort of authentication to be able to map users
# to a group.
filtergroupslist = '/usr/local/etc/e2guardian/lists/filtergroupslist'
# Authentication files location
# These are now replaced with pre-authstoryboard logic but lists defined here
# bannediplist is ONLY for banned client IP
iplist = 'name=bannedclient,messageno=100,logmessageno=103,path=/usr/local/etc/e2guardian/lists/bannediplist'
# Put client dns names in bannedclientlist if required
#sitelist = 'name=bannedclient,messageno=100,logmessageno=104,path=/usr/local/etc/e2guardian/lists/bannedclientlist'
# exceptioniplist is ONLY for exception client IP
iplist = 'name=exceptionclient,messageno=600,path=/usr/local/etc/e2guardian/lists/exceptioniplist'
# Put client dns names in exceptionclientlist if required
#sitelist = 'name=exceptionclient,messageno=631,path=/usr/local/etc/e2guardian/lists/exceptionclientlist'
# authexception lists are for exception sites/urls allowed before authentication# to allow for machines to update without user authentication
iplist = 'name=authexception,messageno=602,path=/usr/local/etc/e2guardian/lists/authexceptioniplist'
sitelist = 'name=authexception,messageno=602,path=/usr/local/etc/e2guardian/lists/authexceptionsitelist'
urllist = 'name=authexception,messageno=603,path=/usr/local/etc/e2guardian/lists/authexceptionurllist'
reverseclientiplookups = {% if OPNsense.e2guardian.general.reverseclientiplookups == 1 %}on{% else %}off{% endif %}
###
### END of AUTH section

### ACCESS_LOG section
###
loglocation = '/var/log/e2guardian/access.log'
logfileformat = 6
loglevel = {{ OPNsense.e2guardian.general.loglevel }}
logexceptionhits = {{ OPNsense.e2guardian.general.logexceptionhits }}
logadblocks = {% if OPNsense.e2guardian.general.logadblocks == 1 %}on{% else %}off{% endif %}
showweightedfound = {% if OPNsense.e2guardian.general.showweightedfound == 1 %}on{% else %}off{% endif %}
logclienthostnames = {% if OPNsense.e2guardian.general.logclienthostnames == 1 %}on{% else %}off{% endif %}
loguseragent = {% if OPNsense.e2guardian.general.loguseragent == 1 %}on{% else %}off{% endif %}
###
### END of ACCESS_LOG section

### MONITORING section
###
###
### END of MONITORING section

### URL_FILTERING section
###
# Reverse lookups for banned site and URLs.
# If set to on, e2guardian will look up the forward DNS for an IP URL
# address and search for both in the banned site and URL lists.  This would
# prevent a user from simply entering the IP for a banned address.
# It will reduce searching speed somewhat so unless you have a local caching
# DNS server, leave it off and use the Blanket IP Block option in the
# f1.story file instead.
reverseaddresslookups = off
###
### END of URL_FILTERING section

### LIST_SETTINGS section
###
# Abort if list is missing or unreadable
# default is to warn but then ignore missing lists
# To abort on missing list set to on
# abortiflistmissing = off  //NOT YET IMPLIMENTED
#Search sitelist for ip sites
# In v5 a separate set of lists has been introduced for IP sites
# and normally e2g will no longer check site lists for ip's
# If you want to keep backward list compatablity then set this to
# 'on' - but note this incurs an overhead - putting IP in ipsitelists
# and setting this to off gives the fastest implimentation.
# default is 'on'
searchsitelistforip = on
###
### END of LIST_SETTINGS section

### AV_SCANNERS section
###
# Content Scanners (Also known as AV scanners)
# These are plugins that scan the content of all files your browser fetches
# for example to AV scan.  You can have more than one content
# scanner. The plugins are run in the order you specify.
# This is one of the few places you can have multiple options of the same name.
#
# Some of the scanner(s) require 3rd party software and libraries eg clamav.
# See the individual plugin conf file for more options (if any).
#
#contentscanner = '/usr/local/etc/e2guardian/contentscanners/clamdscan.conf'
#!! Not compiled !! contentscanner = '/usr/local/etc/e2guardian/contentscanners/icapscan.conf'
# Content scanner timeout
# Some of the content scanners support using a timeout value to stop
# processing (eg AV scanning) the file if it takes too long.
# If supported this will be used.
# The default of 60 seconds is probably reasonable.
contentscannertimeout = 60
###
### END of AV_SCANNERS section

### HEADER section
###
# if on it adds an X-Forwarded-For: <clientip> to the HTTP request
# header.  This may help solve some problem sites that need to know the
# source ip. on | off
forwardedfor = off
# if on it uses the X-Forwarded-For: <clientip> to determine the client
# IP. This is for when you have squid between the clients and e2guardian.
# Warning - headers are easily spoofed. on | off
usexforwardedfor = off
# as mentioned above, the headers can be easily spoofed in order to fake the
# request origin by setting the X-Forwarded-For header. If you have the
# "usexforwardedfor" option enabled, you may want to specify the IPs from which
# this kind of header is allowed, such as another upstream proxy server for
# instance If you want authorize multiple IPs, specify each one on an individual
# xforwardedforfilterip line.
# xforwardedforfilterip =
# http header checking setings
# Limit number of http header lines in a request/response
# (to guard against attacks)
# Minimum 10 max 250
# default 50
# maxheaderlines = 50
###
### END of HEADER section

### BLOCK_PAGE section
###
# Banned image replacement
# Images that are banned due to domain/url/etc reasons including those
# in the adverts blacklists can be replaced by an image.  This will,
# for example, hide images from advert sites and remove broken image
# icons from banned domains.
# on (default) | off
usecustombannedimage = on
custombannedimagefile = '/usr/local/share/e2guardian/transparent1x1.gif'
#Banned flash replacement
usecustombannedflash = on
custombannedflashfile = '/usr/local/share/e2guardian/blockedflash.swf'
###
### END of BLOCK_PAGE section

### DOWNLOAD_MANAGER section
###
downloadmanager = '/usr/local/etc/e2guardian/downloadmanagers/default.conf'
filecachedir = '/tmp'
deletedownloadedtempfiles = on
initialtrickledelay = 20
trickledelay = 10
###
### END of DOWNLOAD_MANAGER section

### PHRASES section
###
# Weighted phrase mode
# There are 3 possible modes of operation:
# 0 = off = do not use the weighted phrase feature.
# 1 = on, normal = normal weighted phrase operation.
# 2 = on, singular = each weighted phrase found only counts once on a page.
# IMPORTANT: Note that setting this to "0" turns off all features which
# extract phrases from page content, including banned & exception
# phrases (not just weighted), search term filtering, and scanning for
# links to banned URLs.
weightedphrasemode = 2
# Smart, Raw and Meta/Title phrase content filtering options
# Smart is where the multiple spaces and HTML are removed before phrase filtering
# Raw is where the raw HTML including meta tags are phrase filtered
# Meta/Title is where only meta and title tags are phrase filtered (v. quick)
# CPU usage can be effectively halved by using setting 0 or 1 compared to 2
# 0 = raw only
# 1 = smart only
# 2 = both of the above (default)
# 3 = meta/title
phrasefiltermode = 2
# Lower casing options
# When a document is scanned the uppercase letters are converted to lower case
# in order to compare them with the phrases.  However this can break Big5 and
# other 16-bit texts.  If needed preserve the case.  As of version 2.7.0 accented
# characters are supported.
# 0 = force lower case (default)
# 1 = do not change case
# 2 = scan first in lower case, then in original case
preservecase = 0
# Hex decoding options
# When a document is scanned it can optionally convert %XX to chars.
# If you find documents are getting past the phrase filtering due to encoding
# then enable.  However this can break Big5 and other 16-bit texts.
# off = disabled (default)
# on = enabled
hexdecodecontent = off
# Force Quick Search rather than DFA search algorithm
# The current DFA implementation is not totally 16-bit character compatible
# but is used by default as it handles large phrase lists much faster.
# If you wish to use a large number of 16-bit character phrases then
# enable this option.
# off (default) | on (Big5 compatible)
forcequicksearch = off
###
### END of PHRASES section

### TUNING section
###
#sets the number of worker threads to use
#
# This figure is the maximum number of concurrent connections.
# If more connections are made, connections will queue until a worker thread is free.
# On large site you might want to try 5000 (max value 20000)
# 500 is the default suitable for home or samll office use on 64-bit systems
# On 32-bit systems reduce this to 300 to avoid exceeding the <4GB
# virtual memory limit and on Linux decrease the thread stack size from
# 10MB to 2MB (ulimit -s 2048)
httpworkers = 500
# Max content filter size
# Sometimes web servers label binary files as text which can be very
# large which causes a huge drain on memory and cpu resources.
# To counter this, you can limit the size of the document to be
# filtered and get it to just pass it straight through.
# This setting also applies to content regular expression modification.
# The value must not be higher than maxcontentramcachescansize
# Do not set this too low as this will result in pages that contain a
#  long preamble not being content filtered
# The size is in Kibibytes - eg 2048 = 2Mb
# use 0 to set it to maxcontentramcachescansize
maxcontentfiltersize = 2048
# Max content ram cache scan size
# This is only used if you use a content scanner plugin such as AV
# This is the max size of file that e2g will download and cache
# in RAM.  After this limit is reached it will cache to disk
# This value must be less than or equal to maxcontentfilecachescansize.
# The size is in Kibibytes - eg 10240 = 10Mb
# use 0 to set it to maxcontentfilecachescansize
# This option may be ignored by the configured download manager.
maxcontentramcachescansize = 2000
# Max content file cache scan size
# This is only used if you use a content scanner plugin such as AV
# This is the max size file that DG will download
# so that it can be scanned or virus checked.
# This value must be greater or equal to maxcontentramcachescansize.
# The size is in Kibibytes - eg 10240 = 10Mb
maxcontentfilecachescansize = 20000
# Proxy timeout
# Set tcp timeout between the Proxy and e2guardian
 # This is a connection timeout
 # If proxy is remote you may need to increase this to 10 or more.
# Min 5 - Max 100
proxytimeout = 5
# Connect timeout
# Set tcp timeout between the e2guardian and upstream service (proxy or target host)
 # This is a connection timeout
 # For remote sites you may need to increase this to 10 or more.
# Min 1 - Max 100
# default 3
connecttimeout = 5
# Proxy header exchange
# Set timeout between the Proxy and e2guardian
# Min 20 - Max 300
# If this is higher than proxies timeout user will get proxy Gateway error page
# If lower e2guardian Gateway error page
proxyexchange = 61
# Pconn timeout
# how long a persistent connection will wait for other requests
# squid apparently defaults to 1 minute (persistent_request_timeout),
# so wait slightly less than this to avoid duff pconns.
# Min 5 - Max 300
pcontimeout = 55
###
### END of TUNING section

### DEBUG section
###
# Storyboard tracing
# Warning - produces verbose output - do not use in production
# Output goes to syslog (or stderr in debug mode)
# default off
# storyboardtrace = off
# if on it logs some debug info regarding accept()ing and failed connections
# which
# can usually be ignored.  These are logged by syslog.  It is safe to leave
# it on or off
logconnectionhandlingerrors = on
#Debug Level
#Enable debug e2guardian
#debug one value:
#Eg
#	debuglevel = 'ICAP'
#Enable ICAP debug informations only
#
#Eg
#	debuglevel = 'ALL'
#Enable ALL debug informations
#
#Additive mode:
#Eg
#	debuglevel = 'ICAP,NET'
#Enable ICAP and NET debug informations
#
#Soustractive mode:
#Eg
#	debuglevel = 'ALL,-ICAP'
#Enable all debug informations but without ICAP debug informations
#	debuglevel = 'ALL,-ICAP,-NET,-FILTER'
#Enable all debug informations but without ICAP, NETWORK and FILTER debug informations
#by default disabled, if this option is required just uncomment the line below
#works also with e2guardian -N (-N Do not go into the background)
#Possible value : ICAP CLAMAV ICAPC (icap client)
#debuglevel = 'ALL'
#Directory for result of debug level (log)
#Works only if debuglevel is enabled
#
#debuglevelfile = '/var/log/e2guardian/debuge2'
###
### END of DEBUG section

### PROCESS section
###
# PID filename
# Defines process id directory and filename.
#pidfilename = '/var/run/e2guardian.pid'
# Disable daemoning
# If enabled the process will not fork into the background.
# It is not usually advantageous to do this.
# on|off (defaults to off)
nodaemon = off
# Mail program
# Path (sendmail-compatible) email program, with options.
# Not used if usesmtp is disabled (filtergroup specific).
##!! Not compiled !!mailer = '/usr/sbin/sendmail -t'   # NOT YET IMPLIMENTED
###
### END of PROCESS section

### OBSOLETE section
###
### Directives here are depreciated and may already not work
###
#!! Not compiled !! originalip = off
# Content scan exceptions // THIS MOVED to e2guardianf1.conf
# contentscanexceptions = off
mapportstoips = off
recheckreplacedurls = off
# monitorhelper = '/usr/local/bin/mymonitor'
###
### END of OBSOLETE section
nologger = off
{% endif %}
