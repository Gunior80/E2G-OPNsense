# Exception file URL list
# Use this list to define URLs from which files can be downloaded,
# overriding a blanket download block (blockdownloads = on) or the
# banned MIME type and extension lists (blockdownloads = off).
#
# DOES NOT override content/virus scanning or site/URL bans.

# Don't bother with the www. or
# the http://
#
# These are specifically domains and are not URLs.
# For example 'foo.bar/porn/' is no good, you need
# to just have 'foo.bar'.
#
# You can also match IPs here too.
#
# As of DansGuardian 2.7.3 you can now include
# .tld so for example you can match .gov for example


# Time limiting syntax:
# #time: <start hour> <start minute> <end hour> <end minute> <days>
# Example:
##time: 9 0 17 0 01234
# Remove the first # from the line above to enable this list only from
# 9am to 5pm, Monday to Friday.

{% if helpers.exists('OPNsense.e2guardian.general.enabled') and OPNsense.e2guardian.general.enabled == '1' %}
{%  if helpers.exists('OPNsense.e2guardian.group.groups.group') %}
{%      for group in helpers.toList('OPNsense.e2guardian.group.groups.group') %}
{%          if TARGET_FILTERS['OPNsense.e2guardian.group.groups.group.' ~ loop.index0] or TARGET_FILTERS['OPNsense.e2guardian.group.groups.group'] %}
{%              if group.enabled == '1' %}
{%                  if group.exceptionfileurllist and group.exceptionfileurllist != '' %}
{%                      for exceptionfileurllist in group.exceptionfileurllist.split(',') %}
{%                          set current_exceptionfileurllist = helpers.getUUID(exceptionfileurllist) %}
{%                          if current_exceptionfileurllist.enabled == '1' and current_exceptionfileurllist.listtype == 'urllist' %}
.Include</usr/local/etc/e2guardian/lists/custom/{{ current_exceptionfileurllist.listname }}>
{%                          endif %}
{%                      endfor %}
{%                  endif %}
{%              endif %}
{%          endif %}
{%      endfor %}
{%  endif %}
{% endif %}