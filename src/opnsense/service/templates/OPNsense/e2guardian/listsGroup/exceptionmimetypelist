# Exception MIME type list
# Use as a filter group's "exceptionmimetypelist",
# to override a blanket download block.
# (blockdownloads = on)
#
# DOES NOT override content/virus scanning or site/URL bans.
#
# Default list:
# Unblock web pages & graphics

# Text/web document types

#text/plain
#text/html
#text/css
#text/xml
#text/xsl
#text/richtext

# Image types

#image/bmp
#image/cis-cod
#image/gif
#image/ief
#image/jpeg
#image/pipeg
#image/png
#image/tiff
#image/x-cmu-raster
#image/x-cmx
#image/x-icon
#image/x-portable-anymap
#image/x-portable-bitmap
#image/x-portable-graymap
#image/x-portable-pixmap
#image/x-rgb
#image/x-xbitmap
#image/x-xpixmap
#image/x-xwindowdump

{% if helpers.exists('OPNsense.e2guardian.general.enabled') and OPNsense.e2guardian.general.enabled == '1' %}
{%  if helpers.exists('OPNsense.e2guardian.group.groups.group') %}
{%      for group in helpers.toList('OPNsense.e2guardian.group.groups.group') %}
{%          if TARGET_FILTERS['OPNsense.e2guardian.group.groups.group.' ~ loop.index0] or TARGET_FILTERS['OPNsense.e2guardian.group.groups.group'] %}
{%              if group.enabled == '1' %}
{%                  if group.exceptionmimetypelist and group.exceptionmimetypelist != '' %}
{%                      for exceptionmimetypelist in group.exceptionmimetypelist.split(',') %}
{%                          set current_exceptionmimetypelist = helpers.getUUID(exceptionmimetypelist) %}
{%                          if current_exceptionmimetypelist.mimetypefield is defined and current_exceptionmimetypelist.mimetypefield != '' %}
{%                              for mimetypefield in current_exceptionmimetypelist.mimetypefield.split(',') %}
{{ mimetypefield|trim }}
{%                              endfor %}
{%                          endif %}
{%                      endfor %}
{%                  endif %}
{%              endif %}
{%          endif %}
{%      endfor %}
{%  endif %}
{% endif %}